apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-deployment
  labels:
    app: myapp
spec:
  selector:
    matchLabels:
      app: myapp
  replicas: 3
  template:
    metadata:
      name: myapp-pod
      labels:
        app: myapp
    spec:
      # Request that Pods created by this deployment be run on separate nodes in the cluster
      #   Note that the `affinity` section of a Deployment spec is optional.
      # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - myapp
              topologyKey: kubernetes.io/hostname
      # Container(s) to be run in Pod (Same spec as Chapter 3)
      containers:
      - name: myapp-container
        image: nginxdemos/hello:plain-text
        ports:
        - name: web
          containerPort: 80
        # Readiness probe marks Pod as ready to accept traffic after success
        # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#define-readiness-probes
        readinessProbe:
          httpGet:
            path: /
            port: web
        # Liveness probe runs every `periodSeconds`; if liveliness probes fail the Pod is
        #   understood to be unhealthy and another will be created to replace it.
        # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#define-a-liveness-http-request
        livenessProbe:
          httpGet:
            path: /
            port: web
          periodSeconds: 5
